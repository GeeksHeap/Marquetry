# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Little Tabby
# This file is distributed under the same license as the Marquetry package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Marquetry v0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-07 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../container/container_base.rst:3
msgid "Container Class"
msgstr ""

#: marquetry.container.Container:1 of
msgid ""
"Represents a container with associated data and gradient in a "
"computational graph."
msgstr ""

#: marquetry.container.Container:3 of
msgid ""
"This class is used to create containers that hold data and gradients in a"
" computational graph. Containers are typicallyã€€created by wrapping data "
"arrays using this class."
msgstr ""

#: marquetry.container.Container marquetry.container.Container.astype
#: marquetry.container.Container.backward marquetry.container.Container.dot
#: marquetry.container.Container.max marquetry.container.Container.mean
#: marquetry.container.Container.min marquetry.container.Container.repeat
#: marquetry.container.Container.reshape marquetry.container.Container.squeeze
#: marquetry.container.Container.sum marquetry.container.Container.transpose
#: marquetry.container.Container.unsqueeze of
msgid "Parameters"
msgstr ""

#: marquetry.container.Container:6 of
msgid "The data associated with the container."
msgstr ""

#: marquetry.container.Container:8 of
msgid ""
"A name or label for the container, which is helpful for debugging and "
"visualization."
msgstr ""

#: marquetry.container.Container:14 of
msgid ""
"Containers created with this class are used in Marquetry's automatic "
"differentiation framework. The `Container` class wraps data and "
"associates it with gradient information. Containers can be connected "
"through functions to create computational graphs for automatic "
"differentiation."
msgstr ""

#: marquetry.Container.T:1 of
msgid "Transpose the data array (reversed axis)."
msgstr ""

#: marquetry.Container.T marquetry.Container.creator marquetry.Container.data
#: marquetry.Container.dtype marquetry.Container.generation
#: marquetry.Container.grad marquetry.Container.name marquetry.Container.ndim
#: marquetry.Container.node marquetry.Container.shape marquetry.Container.size
#: marquetry.container.Container.astype marquetry.container.Container.copy
#: marquetry.container.Container.dot marquetry.container.Container.max
#: marquetry.container.Container.mean marquetry.container.Container.min
#: marquetry.container.Container.repeat marquetry.container.Container.reshape
#: marquetry.container.Container.squeeze marquetry.container.Container.sum
#: marquetry.container.Container.to_numpy
#: marquetry.container.Container.transpose
#: marquetry.container.Container.unsqueeze of
msgid "Returns"
msgstr ""

#: marquetry.Container.T:3 of
msgid "A new container containing the transposed data array."
msgstr ""

#: marquetry.Container.T marquetry.Container.creator marquetry.Container.data
#: marquetry.Container.dtype marquetry.Container.generation
#: marquetry.Container.grad marquetry.Container.name marquetry.Container.ndim
#: marquetry.Container.node marquetry.Container.shape marquetry.Container.size
#: marquetry.container.Container.astype marquetry.container.Container.copy
#: marquetry.container.Container.dot marquetry.container.Container.max
#: marquetry.container.Container.mean marquetry.container.Container.min
#: marquetry.container.Container.repeat marquetry.container.Container.reshape
#: marquetry.container.Container.squeeze marquetry.container.Container.sum
#: marquetry.container.Container.to_numpy
#: marquetry.container.Container.transpose
#: marquetry.container.Container.unsqueeze of
msgid "Return type"
msgstr ""

#: marquetry.Container.T:7 marquetry.Container.name:7
#: marquetry.container.Container.astype:14 marquetry.container.Container.copy:9
#: marquetry.container.Container.dot:13 marquetry.container.Container.max:15
#: marquetry.container.Container.mean:15 marquetry.container.Container.min:15
#: marquetry.container.Container.repeat:18
#: marquetry.container.Container.reshape:10
#: marquetry.container.Container.squeeze:11
#: marquetry.container.Container.sum:15
#: marquetry.container.Container.to_numpy:9
#: marquetry.container.Container.transpose:11
#: marquetry.container.Container.unsqueeze:10 of
msgid "Examples"
msgstr ""

#: marquetry.container.Container.astype:1 of
msgid "Return a new container with a specified data type."
msgstr ""

#: marquetry.container.Container.astype:3 of
msgid "The desired data type for the new container."
msgstr ""

#: marquetry.container.Container.astype:5 of
msgid ""
"If True, the data type of the current container is modified in-place. If "
"False (default), a new container with the specified data type is "
"returned."
msgstr ""

#: marquetry.container.Container.astype:10 of
msgid "A new container with the specified data type."
msgstr ""

#: marquetry.container.Container.backward:1 of
msgid "Perform backpropagation starting from this container."
msgstr ""

#: marquetry.container.Container.backward:3 of
msgid ""
"During backpropagation, the `backward` method of each parent function, "
"which created this container, is called. This process calculates and "
"stores the gradient for this container (to the corresponding container "
"node)."
msgstr ""

#: marquetry.container.Container.backward:7 of
msgid ""
"If the gradient (`grad`) of this container is initially `None`, this "
"method initializes it with an array of ones with the same shape as the "
"data. This serves as the initial error for the backpropagation process."
msgstr ""

#: marquetry.container.Container.backward:11 of
msgid ""
"If `True`, retain the gradient computation graph for potential higher-"
"order derivatives. Otherwise, release computational graph of the "
"backpropagation."
msgstr ""

#: marquetry.container.Container.backward:18 of
msgid ""
"In most cases of model training, you don't need higher-order derivatives,"
" so it is recommended to set `retain_grad` to `False`. This method go "
"reverse through the computational graph created during forward "
"computation and calculates gradients for each input container. The "
"`backward` method is typically called after the forward pass to compute "
"gradients and update model parameters."
msgstr ""

#: marquetry.container.Container.clear_grad:1 of
msgid "Clear the gradient of this container."
msgstr ""

#: marquetry.container.Container.clear_grad:3 of
msgid ""
"When called, this method sets the gradient of this container to None, "
"effectively clearing any gradient information associated with it. This "
"can be useful when you want to remove gradient information from a "
"container(corresponding container node)."
msgstr ""

#: marquetry.container.Container.copy:1 of
msgid "Create a copy of this container."
msgstr ""

#: marquetry.container.Container.copy:3 of
msgid "This method copy only data, not gradient and computational graph."
msgstr ""

#: marquetry.container.Container.copy:5 of
msgid "A new container that has a copy of the current container data array."
msgstr ""

#: marquetry.Container.creator:1 of
msgid ""
"The `Function` object that created this container during forward "
"computation."
msgstr ""

#: marquetry.Container.creator:3 of
msgid ""
"If `creator` is `None`, it means that this container is not the result of"
" a function, and backpropagation will not proceed beyond this container."
msgstr ""

#: marquetry.Container.creator:6 of
msgid ""
"The function that created this container, or `None` if the container is "
"not created by a function."
msgstr ""

#: marquetry.Container.data:1 of
msgid "Get the data array associated with this container."
msgstr ""

#: marquetry.Container.data:3 of
msgid ""
"The data array associated with this container.     If no data is "
"associated, it returns `None`."
msgstr ""

#: marquetry.Container.data:5 of
msgid "The data array associated with this container."
msgstr ""

#: marquetry.Container.data:6 of
msgid "If no data is associated, it returns `None`."
msgstr ""

#: marquetry.container.Container.dot:1 of
msgid ""
"Calculate the dot product between this container and another container or"
" array."
msgstr ""

#: marquetry.container.Container.dot:3 of
msgid "The other container to compute the dot product with."
msgstr ""

#: marquetry.container.Container.dot:6 of
msgid ""
"A new container containing the dot product of this container and     the "
"other container."
msgstr ""

#: marquetry.container.Container.dot:8 of
msgid "A new container containing the dot product of this container and"
msgstr ""

#: marquetry.container.Container.dot:9 of
msgid "the other container."
msgstr ""

#: marquetry.Container.dtype:1 of
msgid "Get the data type of the data array."
msgstr ""

#: marquetry.Container.dtype:3 of
msgid "The data type of the elements in the data array."
msgstr ""

#: marquetry.Container.dtype:8 of
msgid ""
"The `dtype` property allows you to access the data type of the elements "
"in the data array, such as float32, int64, etc."
msgstr ""

#: marquetry.Container.generation:1 of
msgid "Get the generation number associated with this container."
msgstr ""

#: marquetry.Container.generation:3 of
msgid "The generation number used for backpropagation."
msgstr ""

#: marquetry.Container.grad:1 of
msgid "Get the gradient array associated with this container."
msgstr ""

#: marquetry.Container.grad:3 of
msgid "The gradient container corresponding to this container."
msgstr ""

#: marquetry.container.Container.max:1 of
msgid "Calculate the maximum value along the specified axis."
msgstr ""

#: marquetry.container.Container.max:3 of
msgid ""
"The axis or axes along which to compute the maximum value. If None "
"(default), the maximum value is calculated over all elements."
msgstr ""

#: marquetry.container.Container.max:6 marquetry.container.Container.mean:6
#: marquetry.container.Container.min:6 marquetry.container.Container.sum:6 of
msgid ""
"If True, the dimensions of the output are retained, and the result will "
"have the same number of dimensions as the original container. If False "
"(default), dimensions of size 1 are removed from the output."
msgstr ""

#: marquetry.container.Container.max:11 of
msgid ""
"A new container containing the maximum value along the specified axis or "
"axes."
msgstr ""

#: marquetry.container.Container.mean:1 of
msgid "Calculate the mean (average) along the specified axis."
msgstr ""

#: marquetry.container.Container.mean:3 of
msgid ""
"The axis or axes along which to compute the mean. If None (default), the "
"mean is calculated over all elements."
msgstr ""

#: marquetry.container.Container.mean:11 of
msgid "A new container containing the mean along the specified axis or axes."
msgstr ""

#: marquetry.container.Container.min:1 of
msgid "Calculate the minimum value along the specified axis."
msgstr ""

#: marquetry.container.Container.min:3 of
msgid ""
"The axis or axes along which to compute the minimum value. If None "
"(default), the minimum value is calculated over all elements."
msgstr ""

#: marquetry.container.Container.min:11 of
msgid ""
"A new container containing the minimum value along the specified axis or "
"axes."
msgstr ""

#: marquetry.Container.name:1 of
msgid "Get the name assigned to this Container."
msgstr ""

#: marquetry.Container.name:3 of
msgid "The name assigned to this Container, or None if no name is assigned."
msgstr ""

#: marquetry.Container.ndim:1 of
msgid "Get the dimensionality of the data array."
msgstr ""

#: marquetry.Container.ndim:3 of
msgid "The number of dimensions in the data array."
msgstr ""

#: marquetry.Container.node:1 of
msgid "Get the corresponding ContainerNode for this container."
msgstr ""

#: marquetry.Container.node:3 of
msgid "The ContainerNode corresponding to this container."
msgstr ""

#: marquetry.container.Container.repeat:1 of
msgid "Repeat elements of the container along the specified axis."
msgstr ""

#: marquetry.container.Container.repeat:3 of
msgid ""
"The number of times to repeat each element along the specified axis. If "
"it is an int, all elements are repeated that number of times. If it is a "
"sequence of ints, it must have the same length as the specified axis."
msgstr ""

#: marquetry.container.Container.repeat:7 of
msgid ""
"The axis along which to repeat the elements. If None (default), the "
"container is flattened before repeating."
msgstr ""

#: marquetry.container.Container.repeat:11 of
msgid ""
"A new container containing the repeated elements along the specified     "
"axis."
msgstr ""

#: marquetry.container.Container.repeat:13 of
msgid "A new container containing the repeated elements along the specified"
msgstr ""

#: marquetry.container.Container.repeat:14 of
msgid "axis."
msgstr ""

#: marquetry.container.Container.reshape:1 of
msgid "Reshape the container to the specified shape."
msgstr ""

#: marquetry.container.Container.reshape:3 of
msgid ""
"One or more integers or a tuple of integers specifying the desired shape "
"of the reshaped container."
msgstr ""

#: marquetry.container.Container.reshape:6 of
msgid "A new container with the specified shape."
msgstr ""

#: marquetry.container.Container.retain_data:1 of
msgid "Retain the data of this container within its corresponding ContainerNode."
msgstr ""

#: marquetry.container.Container.retain_data:3 of
msgid ""
"When called, this method sets the data of this container to the data "
"attribute of its corresponding ContainerNode. This is useful when you "
"want to ensure that the data is retained within the computational graph "
"for later use."
msgstr ""

#: marquetry.container.Container.retain_data:9 of
msgid ""
"Retaining data can be helpful when you need to ensure that the data "
"remains accessible within the computational graph, even if the original "
"Container object goes out of scope."
msgstr ""

#: marquetry.Container.shape:1 of
msgid "Get the shape of the data array."
msgstr ""

#: marquetry.Container.shape:3 of
msgid ""
"A tuple representing the shape of the data array.     For example, for a "
"2D array, the shape might be (rows, columns)."
msgstr ""

#: marquetry.Container.shape:5 of
msgid "A tuple representing the shape of the data array."
msgstr ""

#: marquetry.Container.shape:6 of
msgid "For example, for a 2D array, the shape might be (rows, columns)."
msgstr ""

#: marquetry.Container.size:1 of
msgid "Get the total number of elements in the data array."
msgstr ""

#: marquetry.Container.size:3 of
msgid "The total number of elements in the data array."
msgstr ""

#: marquetry.container.Container.squeeze:1 of
msgid "Remove single-dimensional entries from the container's shape."
msgstr ""

#: marquetry.container.Container.squeeze:3 of
msgid ""
"The axis along which to remove single-dimensional entries. If None "
"(default), all single-dimensional entries are removed."
msgstr ""

#: marquetry.container.Container.squeeze:7 of
msgid "A new container with the specified single-dimensional entries removed."
msgstr ""

#: marquetry.container.Container.sum:1 of
msgid "Calculate the sum of the container's elements along the specified axis."
msgstr ""

#: marquetry.container.Container.sum:3 of
msgid ""
"The axis or axes along which to compute the sum. If None (default), the "
"sum is calculated over all elements."
msgstr ""

#: marquetry.container.Container.sum:11 of
msgid "A new container containing the sum along the specified axis or axes."
msgstr ""

#: marquetry.container.Container.to_cpu:1 of
msgid "Move the container's data array to the CPU memory(numpy.ndarray)."
msgstr ""

#: marquetry.container.Container.to_cpu:3 of
msgid ""
"This method converts the container's data array from GPU memory to CPU "
"memory. If the container's data is already in CPU memory or if it is "
"`None`, no action is taken."
msgstr ""

#: marquetry.container.Container.to_gpu:1 of
msgid "Move the container's data array to GPU memory(cupy.ndarray)."
msgstr ""

#: marquetry.container.Container.to_gpu:3 of
msgid ""
"This method converts the container's data array from CPU memory to GPU "
"memory. If the container's data is already in GPU memory or if it is "
"`None`, no action is taken."
msgstr ""

#: marquetry.container.Container.to_numpy:1 of
msgid "Convert the container to a NumPy array."
msgstr ""

#: marquetry.container.Container.to_numpy:3 of
msgid "A NumPy array representing the data of the container."
msgstr ""

#: marquetry.container.Container.to_numpy of
msgid "Raises"
msgstr ""

#: marquetry.container.Container.to_numpy:6 of
msgid ""
"If the container has a gradient container, it cannot be converted to a "
"NumPy array."
msgstr ""

#: marquetry.container.Container.transpose:1 of
msgid "Transpose the container's data array."
msgstr ""

#: marquetry.container.Container.transpose:3 of
msgid ""
"One or more integers or a tuple of integers specifying the desired order "
"of dimensions in the transposed container. If no axes are provided, the "
"container is fully transposed."
msgstr ""

#: marquetry.container.Container.transpose:7 of
msgid "A new container with the dimensions reordered as specified."
msgstr ""

#: marquetry.container.Container.unchain:1 of
msgid "Remove the link to the creator function."
msgstr ""

#: marquetry.container.Container.unchain:5 of
msgid ""
"Calling this method removes the computational graph connection between "
"this container and its creator function, effectively stopping "
"backpropagation at this point."
msgstr ""

#: marquetry.container.Container.unchain_backward:1 of
msgid "Unchain this container and its ancestors in the computational graph."
msgstr ""

#: marquetry.container.Container.unchain_backward:3 of
msgid ""
"This method unchains the current container and its ancestors by removing "
"the links between them and their creator functions. It effectively stops "
"backpropagation from this container onward."
msgstr ""

#: marquetry.container.Container.unchain_backward:9 of
msgid ""
"This method iteratively unchains all ancestors of the current container, "
"ensuring that backpropagation is halted at this point."
msgstr ""

#: marquetry.container.Container.unsqueeze:1 of
msgid "Add a single-dimensional entry to the container's shape."
msgstr ""

#: marquetry.container.Container.unsqueeze:3 of
msgid "The axis along which to add a single-dimensional entry."
msgstr ""

#: marquetry.container.Container.unsqueeze:6 of
msgid ""
"A new container with a single-dimensional entry added along the specified"
" axis."
msgstr ""

