# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Little Tabby
# This file is distributed under the same license as the Marquetry package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Marquetry v0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-07 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../functions/connections/deconvolution_2d.rst:3
msgid "Deconvolution2D"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D:1
#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:1 of
msgid "Perform 2D deconvolution on an input array."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D:3
#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:4 of
msgid ""
"This class defines a function that performs 2D deconvolution on an input "
"array or container using the given de-convolutional kernel and optional "
"bias."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward
#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward
#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d of
msgid "Parameters"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:7 of
msgid "The input array or container to be de-convolved."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:9 of
msgid "The de-convolutional kernel."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:11 of
msgid "The bias term. If None, no bias is added."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:13 of
msgid ""
"The stride for moving the de-convolutional kernel. If an int is provided,"
" it is converted to a tuple of the same value for both dimensions. "
"Defaults to 1."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:17 of
msgid ""
"The padding added to the input array or container before deconvolution. "
"If an int is provided, it is converted to a tuple of the same value for "
"both dimensions. Defaults to 0."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:21 of
msgid ""
"The size of the output feature map. If None, the size is determined based"
" on the input and kernel sizes."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward
#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward
#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d of
msgid "Returns"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:25 of
msgid ""
"The result of 2D deconvolution on the input     array or container using "
"the provided kernel and bias (if any)."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:27 of
msgid "The result of 2D deconvolution on the input"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:28 of
msgid "array or container using the provided kernel and bias (if any)."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward
#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward
#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d of
msgid "Return type"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:29 of
msgid ":class:`marquetry.Container`"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.deconvolution_2d:32 of
msgid "Examples"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D:1 of
msgid "Bases: :py:class:`~marquetry.function.Function`"
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D:8 of
msgid ""
"Generally, you don't need to execute ``forward`` and ``backward`` method "
"manually. You should use only ``__call__`` method."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward:1
#: of
msgid "Perform the backward computation of the function."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward:3
#: of
msgid "Gradient data arrays."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward:6
#: of
msgid "Gradient data arrays with respect to the input data arrays."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.backward:11
#: of
msgid ""
"Function backward should be called by only marquetry (user shouldn't call"
" this method). Generally, a user should call the backward method in "
":class:`marquetry.Container` of the model output."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward:1 of
msgid "Perform the forward computation of the function."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward:3 of
msgid "Input data arrays."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward:6 of
msgid "Output data arrays."
msgstr ""

#: marquetry.functions.connection.deconvolution_2d.Deconvolution2D.forward:9 of
msgid ""
"Generally, this class shouldn't be called by manually because `forward` "
"is called via `__call__`."
msgstr ""

