# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Little Tabby
# This file is distributed under the same license as the Marquetry package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Marquetry v0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-07 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../functions/evaluations/classification_error.rst:3
msgid "Classification Error"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError:1
#: marquetry.functions.evaluation.classification.classification_error.classification_error:1
#: of
msgid "Compute classification error based on true labels and predictions."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:4
#: of
msgid ""
"This function defines that computes the classification error based on the"
" true labels and predicted labels. It supports an optional `ignore_label`"
" parameter to exclude certain labels from the error calculation."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:11
#: of
msgid "ClassificationError is calculated as:"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:8
#: of
msgid ":math:`ClassificationError = (FP + FN) / (TP + FP + TN + FN)`"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:10
#: of
msgid ""
"(TP -> TruePositive, FP -> FalsePositive, TN -> TrueNegative, FN -> "
"FalseNegative)"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward
#: marquetry.functions.evaluation.classification.classification_error.classification_error
#: of
msgid "Parameters"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:13
#: of
msgid "The predicted labels."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:15
#: of
msgid "The true labels."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:17
#: of
msgid ""
"The label value to be ignored when calculating the classification error. "
"If None, no labels are ignored."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:20
#: of
msgid ""
"The return value's dtype, Default is \"float64\" that means 64-bit float "
"value."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward
#: marquetry.functions.evaluation.classification.classification_error.classification_error
#: of
msgid "Returns"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:23
#: of
msgid ""
"The classification error based on the true     labels and predicted "
"labels, excluding labels specified by 'ignore_label' (if any)."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:25
#: of
msgid "The classification error based on the true"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:26
#: of
msgid ""
"labels and predicted labels, excluding labels specified by 'ignore_label'"
" (if any)."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward
#: marquetry.functions.evaluation.classification.classification_error.classification_error
#: of
msgid "Return type"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.classification_error:27
#: of
msgid ":class:`marquetry.Container`"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError:1
#: of
msgid "Bases: :py:class:`~marquetry.function.Function`"
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError:3
#: of
msgid ""
"This class defines that computes the classification error based on the "
"true labels and predicted labels. It supports an optional `ignore_label` "
"parameter to exclude certain labels from the error calculation."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError:8
#: of
msgid ""
"Generally, you don't need to execute ``forward`` and ``backward`` method "
"manually. You should use only ``__call__`` method."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward:1
#: of
msgid "Perform the forward computation of the function."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward:3
#: of
msgid "Input data arrays."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward:6
#: of
msgid "Output data arrays."
msgstr ""

#: marquetry.functions.evaluation.classification.classification_error.ClassificationError.forward:9
#: of
msgid ""
"Generally, this class shouldn't be called by manually because `forward` "
"is called via `__call__`."
msgstr ""

