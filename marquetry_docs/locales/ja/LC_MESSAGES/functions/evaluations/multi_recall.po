# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Little Tabby
# This file is distributed under the same license as the Marquetry package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Marquetry v0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-07 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../functions/evaluations/multi_recall.rst:3
msgid "Multi Recall"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall:1
#: marquetry.functions.evaluation.classification.recall.multi_recall:1 of
msgid ""
"Calculate recall for a specific target class based on true labels and "
"predicted values."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:3 of
msgid ""
"This function defines that calculates recall for a specific target class "
"based on the true labels and predicted values. Recall measures the "
"ability to correctly identify positive cases for the specified target "
"class, indicating how many actual positive labels for that class were "
"correctly predicted."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:10 of
msgid "Recall is calculated as:"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:9 of
msgid ""
":math:`Recall = TP / (TP + FN)` (TP -> True Positives, FN -> False "
"Negatives)"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward
#: marquetry.functions.evaluation.classification.recall.multi_recall of
msgid "Parameters"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:12 of
msgid "The predicted values."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:14 of
msgid "The true labels."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:16 of
msgid "The class index to calculate recall for. Defaults to 1."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:19 of
msgid ""
"The return value's dtype, Default is \"float64\" that means 64-bit float "
"value."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward
#: marquetry.functions.evaluation.classification.recall.multi_recall of
msgid "Returns"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:22 of
msgid ""
"The recall for the specified target class     based on the true labels "
"and predicted values."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:24 of
msgid "The recall for the specified target class"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:25 of
msgid "based on the true labels and predicted values."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward
#: marquetry.functions.evaluation.classification.recall.multi_recall of
msgid "Return type"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.multi_recall:26 of
msgid ":class:`marquetry.Container`"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall:1 of
msgid "Bases: :py:class:`~marquetry.function.Function`"
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall:3 of
msgid ""
"This class defines a function that calculates recall for a specific "
"target class based on the true labels and predicted values. Recall "
"measures the ability to correctly identify positive cases for the "
"specified target class, indicating how many actual positive labels for "
"that class were correctly predicted."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall:10 of
msgid ""
"Generally, you don't need to execute ``forward`` and ``backward`` method "
"manually. You should use only ``__call__`` method."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward:1
#: of
msgid "Perform the forward computation of the function."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward:3
#: of
msgid "Input data arrays."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward:6
#: of
msgid "Output data arrays."
msgstr ""

#: marquetry.functions.evaluation.classification.recall.MultiRecall.forward:9
#: of
msgid ""
"Generally, this class shouldn't be called by manually because `forward` "
"is called via `__call__`."
msgstr ""

