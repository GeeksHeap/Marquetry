# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Little Tabby
# This file is distributed under the same license as the Marquetry package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Marquetry v0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-07 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../preprocesses/encodes/one_hot.rst:3
msgid "One-Hot Encoding"
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:1 of
msgid "Bases: :py:class:`~marquetry.preprocess.Preprocess`"
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:1 of
msgid "One-Hot Encoding for Categorical Data."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:3 of
msgid ""
"OneHotEncode is a preprocessing step used to one-hot encode categorical "
"columns in a Pandas DataFrame. This transformation converts categorical "
"columns into a set of binary columns, where each unique category is "
"represented as a separate binary column."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode
#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process of
msgid "Parameters"
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:7 of
msgid "A list of column names to be one-hot encoded."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:9 of
msgid "The name of the OneHotEncode instance."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:11 of
msgid ""
"A boolean flag indicating whether this OneHotEncode instance is for "
"training or inference."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:13 of
msgid ""
"Whether to include null or NaN values when calculating one-hot encoding. "
"Defaults to False."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:16 of
msgid ""
"Whether to allow unknown categories during one-hot encoding. If set to "
"True, an additional binary column will be created for unknown categories."
" Defaults to False."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:22 of
msgid "Examples"
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:37 of
msgid ""
"OneHotEncode converts categorical columns into binary columns (0 and 1). "
"And, You can control the inclusion of null or NaN values using the "
"`include_null` parameter and, the `allow_unknown_value` parameter allows "
"you to create an additional binary column for unknown categories."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode:41 of
msgid "To avoid multicolinearity problem, remove the one binary category column."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process:1 of
msgid "Process the input DataFrame by one-hot encoding specified columns."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process:3 of
msgid "The input DataFrame to be one-hot encoded."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process of
msgid "Returns"
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process:6 of
msgid "The one-hot encoded DataFrame."
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process of
msgid "Return type"
msgstr ""

#: marquetry.preprocesses.encodes.one_hot_encode.OneHotEncode.process:11 of
msgid ""
"Generally, process will be called by ``Marquetry`` core. Please call like"
" the ``EXAMPLES``."
msgstr ""

