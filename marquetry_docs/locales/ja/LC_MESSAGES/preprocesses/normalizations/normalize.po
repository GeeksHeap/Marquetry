# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Little Tabby
# This file is distributed under the same license as the Marquetry package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Marquetry v0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-07 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../preprocesses/normalizations/normalize.rst:3
msgid "Normalize (z-score scaling)"
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:1 of
msgid "Bases: :py:class:`~marquetry.preprocess.Preprocess`"
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:1 of
msgid "Column Normalization for Specified Columns in a DataFrame."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:3 of
msgid ""
"ColumnNormalize is a preprocessing step used to normalize specified "
"columns in a Pandas DataFrame. It scales the values in the selected "
"columns to have a mean of 0 and a standard deviation of 1."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize
#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process of
msgid "Parameters"
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:6 of
msgid "A list of column names to be normalized."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:8 of
msgid "The name of the ColumnNormalize instance."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:10 of
msgid ""
"A boolean flag indicating whether this ColumnNormalize instance is for "
"training or inference."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:13 of
msgid ""
"If True, columns containing NaN (null) values will be skipped during "
"normalization. If False, NaN values will raise an error. Defaults to "
"True."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:19 of
msgid "Examples"
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize:34 of
msgid ""
"ColumnNormalize scales the values in the specified columns to have a mean"
" of 0 and a standard deviation of 1. It provides an option to skip "
"columns containing NaN (null) values during normalization."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process:1
#: of
msgid "Process the input DataFrame by normalizing specified columns."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process:3
#: of
msgid "The input DataFrame with columns to be normalized."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process of
msgid "Returns"
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process:6
#: of
msgid "The DataFrame with specified columns normalized."
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process of
msgid "Return type"
msgstr ""

#: marquetry.preprocesses.normalize.column_normalize.ColumnNormalize.process:11
#: of
msgid ""
"Generally, process will be called by ``Marquetry`` core. Please call like"
" the ``EXAMPLES``."
msgstr ""

